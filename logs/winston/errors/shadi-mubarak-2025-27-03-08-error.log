{
  stringValue: '"67e3f81e13af7af8a7488f25s"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '67e3f81e13af7af8a7488f25s',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schema\objectid.js:248:12)
      at ObjectId.SchemaType.applySetters (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1219:12)
      at ObjectId.SchemaType.castForQuery (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1633:15)
      at cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast.js:389:32)
      at model.Query.Query.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4927:12)
      at model.Query.Query._castConditions (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2237:10)
      at model.Query._findOne (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2533:8)
      at model.Query.exec (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4447:28),
  valueType: 'string',
  model: Model { User },
  level: 'error',
  label: 'Shadi Mubarak!',
  timestamp: '2025-03-27T02:42:41.210Z'
}
{
  stringValue: '"67e3f81e13af7af8a"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '67e3f81e13af7af8a',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schema\objectid.js:248:12)
      at ObjectId.SchemaType.applySetters (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1219:12)
      at ObjectId.SchemaType.castForQuery (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1633:15)
      at cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast.js:389:32)
      at model.Query.Query.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4927:12)
      at model.Query.Query._castConditions (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2237:10)
      at model.Query._findOne (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2533:8)
      at model.Query.exec (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4447:28),
  valueType: 'string',
  model: Model { User },
  level: 'error',
  label: 'Shadi Mubarak!',
  timestamp: '2025-03-27T02:44:44.686Z'
}
{
  stringValue: '"67e3f81e13af7af8a74b"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '67e3f81e13af7af8a74b',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schema\objectid.js:248:12)
      at ObjectId.SchemaType.applySetters (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1219:12)
      at ObjectId.SchemaType.castForQuery (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1633:15)
      at cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast.js:389:32)
      at model.Query.Query.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4927:12)
      at model.Query.Query._castConditions (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2237:10)
      at model.Query._findOne (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2533:8)
      at model.Query.exec (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4447:28),
  valueType: 'string',
  model: Model { User },
  level: 'error',
  label: 'Shadi Mubarak!',
  timestamp: '2025-03-27T02:48:06.367Z'
}
{
  stringValue: '"67e3f81e13af7af8a7488f2"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '67e3f81e13af7af8a7488f2',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schema\objectid.js:248:12)
      at ObjectId.SchemaType.applySetters (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1219:12)
      at ObjectId.SchemaType.castForQuery (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1633:15)
      at cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast.js:389:32)
      at model.Query.Query.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4927:12)
      at model.Query.Query._castConditions (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2237:10)
      at model.Query._findOne (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2533:8)
      at model.Query.exec (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4447:28),
  valueType: 'string',
  model: Model { User },
  level: 'error',
  label: 'Shadi Mubarak!',
  timestamp: '2025-03-27T02:49:58.729Z'
}
{
  stringValue: '"67e3f81e13af7af8a"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: '67e3f81e13af7af8a',
  path: '_id',
  reason: BSONError: Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer
      at new ObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\bson\src\objectid.ts:88:15)
      at castObjectId (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast\objectid.js:25:12)
      at ObjectId.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schema\objectid.js:248:12)
      at ObjectId.SchemaType.applySetters (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1219:12)
      at ObjectId.SchemaType.castForQuery (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\schematype.js:1633:15)
      at cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\cast.js:389:32)
      at model.Query.Query.cast (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4927:12)
      at model.Query.Query._castConditions (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2237:10)
      at model.Query._findOne (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:2533:8)
      at model.Query.exec (D:\Shadi Mubarak\Shadi_Mubarak_Backend\node_modules\mongoose\lib\query.js:4447:28),
  valueType: 'string',
  model: Model { User },
  level: 'error',
  label: 'Shadi Mubarak!',
  timestamp: '2025-03-27T02:57:56.738Z'
}
